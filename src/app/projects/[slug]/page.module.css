.wrap {
    display: flex;
    flex-direction: column;
    gap: var(--padding-xlarge);
    width: 100%;
    height: 100%;
    overflow-y: auto;
    overflow-x: hidden; /* page scroll */
    align-items: center;
    background: rgb(var(--background-color-rgb));
}

.header,
.beforeAfter,
.gallery {
    width: 100%;
    max-width: var(--max-width);
}

.header {
    text-align: center;
}

.hero {
    position: relative;
    aspect-ratio: 16/9;
    width: 100%;
    border-radius: 12px;
    overflow: hidden;
}
.heroImg {
    object-fit: cover;
}

.heroOverlay {
    position: absolute;
    inset: auto 0 0 0;
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
    color: white;
    background: linear-gradient(
        to top,
        rgba(0, 0, 0, 0.55),
        rgba(0, 0, 0, 0)
    );
}

.badge {
    display: inline-block;
    font-size: var(--font-size-small);
    background: rgba(255, 255, 255, 0.95);
    color: rgb(var(--accent-color-2-rgb));
    padding: 2px 10px;
    border-radius: 999px;
}

.title {
    margin: 0;
    font-size: var(--font-size-x3large);
    color: white;
}
.summary {
    max-width: 70ch;
    margin: 1rem auto 0;
    opacity: 0.85;
}

.scope {
    margin: 1rem auto 0;
    max-width: 50ch;
    text-align: left;
    padding-left: 1.25rem;
}
.scope li {
    line-height: 1.6;
}

.gallery {
    display: grid;
    gap: var(--padding-medium);
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
}
.gItem {
}
.gImg {
    width: 100%;
    height: auto;
    border-radius: 10px;
    object-fit: cover;
}

.gallery {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
    gap: var(--padding-medium);
    align-items: start;
    justify-items: stretch; /* left-aligned feel */
}

/* Add to the same CSS file */
.galleryContain .gImg {
    object-fit: contain;
    background: #0e1422;
}

.gItem {
    position: relative;
    border-radius: 10px; /* sleeker than big radii */
    overflow: hidden;
    aspect-ratio: 4 / 3; /* <- uniform frame */
    background: #0e1422;
    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.06) inset;
}

.gImg {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* crops to the frame */
    transition: transform 0.35s ease;
}

@media (hover: hover) and (pointer: fine) {
    .gItem:hover .gImg {
        transform: scale(1.04);
    }
}
