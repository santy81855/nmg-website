.container {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: var(--padding-small);
    max-width: 600px;
}

.item {
    background-color: rgb(var(--accent-color-3-rgb));
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 80px;
    width: 100%;
    padding-inline: var(--padding-large);
    gap: var(--padding-xlarge);
}

@media (min-width: 1024px) {
    .container {
        max-width: 860px;
    }
}

.item .icon {
    width: 50px;
    height: auto;
    fill: rgb(var(--accent-color-rgb));
}

.item .arrow {
    width: 25px;
    height: auto;
    fill: white;
    border: none;
    background-color: transparent;
}

.item .titleContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: var(--padding-small);
    flex-grow: 1;
}

.item .title {
    font-family: var(--gilroy-font);
    font-weight: 400;
    letter-spacing: 1px;
    font-size: calc(var(--font-size-medium) * 1.05);
    color: white;
    line-height: 0.9;
}

.expandedItem {
    width: 100%;
    overflow: hidden;
    position: relative;
    /* Enforce consistent media aspect ratio */
    aspect-ratio: 3 / 2;
}

.expandedItem .image {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.expandedItem .content {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    gap: var(--padding-small);
    padding-block: var(--padding-medium);
}

.expandedItem .textContainer {
    position: relative;
    width: 75%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: var(--padding-small);
    padding-inline: var(--padding-large);
    padding-block: var(--padding-medium);
    background-color: transparent;
    z-index: 1;
}

.expandedItem .textContainer::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgb(74, 74, 74, 0.6);
    filter: blur(1px);
    z-index: -1;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

.expandedItem .title {
    font-family: var(--gilroy-font);
    font-weight: 700;
    font-size: var(--font-size-medium);
    color: rgb(var(--accent-color-rgb));
    line-height: 0.9;
}

.expandedItem .description {
    font-family: var(--gilroy-font);
    font-weight: 400;
    letter-spacing: 1px;
    font-size: var(--font-size-small);
    color: white;
    line-height: 1.4;
}

.expandedItem button {
    margin-left: var(--padding-small);
    padding-inline: var(--padding-medium);
    padding-block: var(--padding-small);
    background-color: rgb(var(--accent-color-rgb));
    color: white;
    font-family: var(--gilroy-font);
    font-size: var(--font-size-small);
    font-weight: 400;
    border: none;
    border-radius: var(--border-radius);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

/* Desktop scaling with media queries */
@media (min-width: 768px) {
    .item .title {
        font-size: var(--font-size-xlarge);
    }
    .expandedItem .title {
        font-size: var(--font-size-large);
    }
    .expandedItem .description {
        font-size: var(--font-size-medium);
    }
    .expandedItem button {
        font-size: var(--font-size-medium);
    }

    .expandedItem .content {
        gap: var(--padding-large);
    }
}

@media (min-width: 1200px) {
    .item .title {
        font-size: var(--font-size-xlarge);
    }
    .expandedItem .title {
        font-size: var(--font-size-xlarge);
    }
    .expandedItem .description {
        font-size: var(--font-size-large);
    }
    .expandedItem button {
        font-size: var(--font-size-large);
    }
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
    .arrow {
        cursor: pointer;
    }

    .arrow:hover {
        fill: rgb(var(--accent-color-rgb));
    }

    .expandedItem button {
        cursor: pointer;
    }

    .expandedItem button:hover {
        background-color: rgb(var(--accent-color-hover-rgb));
    }
}
